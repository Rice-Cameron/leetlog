name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: leetlog_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Verify installation
      run: |
        node --version
        npm --version
        npx prisma --version

    - name: Setup test database schema
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_MODE: 3
        NODE_ENV: test
      run: |
        echo "Setting up test database..."
        npm run test:db
        echo "Test database setup complete"

    - name: Run ESLint
      run: |
        echo "Running ESLint..."
        npm run lint
        echo "✅ Linting passed"

    - name: Run TypeScript type checking
      run: |
        echo "Running TypeScript checks..."
        npx tsc --noEmit
        echo "✅ Type checking passed"

    - name: Run test suite
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_MODE: 3
        NODE_ENV: test
      run: |
        echo "Running test suite..."
        npm run test:run
        echo "✅ All tests passed"

    - name: Build application
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
        DATABASE_URL_DEV: ${{ secrets.DATABASE_URL_DEV }}
        DATABASE_MODE: 1
        NODE_ENV: production
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_dummy_key_for_build
        CLERK_SECRET_KEY: sk_test_dummy_key_for_build
        CLERK_WEBHOOK_SECRET: whsec_dummy_webhook_secret_for_build
      run: |
        echo "Building production bundle..."
        npm run build
        echo "✅ Production build successful"

    - name: Test database safety system
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
        DATABASE_MODE: 3
        NODE_ENV: test
      run: |
        echo "Testing database configuration..."
        npm run test-db-mode
        echo "✅ Database safety system verified"

  security-scan:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: |
        echo "Running npm security audit..."
        npm audit --audit-level=high
        echo "✅ Security audit passed"